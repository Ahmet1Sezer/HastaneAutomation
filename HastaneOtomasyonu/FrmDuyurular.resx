<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>